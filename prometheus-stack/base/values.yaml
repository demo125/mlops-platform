
prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
    - prometheus.localhost
    tls:
    - secretName: prometheus-kube-prometheus-stack-selfsigned-cert
      hosts:
      - prometheus.localhost
  prometheusSpec:
    # securityContext:
    #   runAsUser: 0
    #   runAsNonRoot: false
    #   runAsGroup: 0
    #   fsGroup: 0
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: local-storage
          selector:
            matchLabels:
              app.kubernetes.io/name: prometheus-stack-persistence
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 30Gi
# prometheusOperator:
#   admissionWebhooks:
#     deployment:
#       securityContext:
#         runAsUser: 0
#         runAsNonRoot: false
#         runAsGroup: 0
#         fsGroup: 0
#     patch:
#       securityContext:
#         runAsUser: 0
#         runAsNonRoot: false
#         runAsGroup: 0

grafana:
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
    - grafana.localhost
    tls:
    - secretName: grafana-kube-prometheus-stack-selfsigned-cert
      hosts:
      - grafana.localhost
  # persistentVolume:
  #   enabled: true
  #   existingClaim: grafana-pvc
  # securityContext:
  #   fsGroup: 0
  #   runAsGroup: 0
  #   runAsNonRoot: false
  #   runAsUser: 0
