
prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      cert-manager.io/cluster-issuer: cluster-issuer
    hosts:
    - prometheus.localhost
    tls:
    - secretName: prometheus-kube-prometheus-stack-cert-secret
      hosts:
      - prometheus.localhost
  prometheusSpec:
    securityContext:
      runAsUser: 0
      runAsNonRoot: false
      runAsGroup: 0
      fsGroup: 0
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 25Gi
          selector:
            matchLabels:
              name: prometheus-stack-prometheus-pv
    serviceMonitorNamespaceSelector: {} #to select all
    # serviceMonitorNamespaceSelector:
    # matchLabels:
    # kubernetes.io/metadata.name: docker-registry
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false

grafana:
  adminPassword: password
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      cert-manager.io/cluster-issuer: cluster-issuer
    ingressClassName: nginx
    hosts:
    - grafana.localhost
    tls:
    - secretName: prometheus-kube-grafana-stack-cert-secret
      hosts:
      - grafana.localhost
  persistence:
    type: pvc
    enabled: true
    accessModes:
    - ReadWriteOnce
    size: 10Gi
    existingClaim: prometheus-stack-grafana-pvc
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0
    fsGroup: 0
